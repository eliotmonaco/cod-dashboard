---
title: "Cause of Death Explorer"
format:
  dashboard:
    theme:
      - default
      - custom.scss
server: shiny
---

```{r message=FALSE}
#| context: setup

source("scripts/setup.R")
```

# {.sidebar}

## Axis filters

```{r}
sliderInput(
  inputId = "ranks",
  label = "Ranks",
  min = 10,
  max = length(cod),
  value = 10,
  step = 1
)

sliderInput(
  inputId = "years",
  label = "Years",
  min = yrsrng[1],
  max = yrsrng[2],
  value = yrsrng,
  step = 1,
  sep = ""
)
```

## Demographic filters

```{r}
selectInput(
  inputId = "age",
  label = "Age",
  choices = agelist
)

selectInput(
  inputId = "sex",
  label = "Sex",
  choices = sexlist
)

selectInput(
  inputId = "race",
  label = "Race",
  choices = racelist
)

selectInput(
  inputId = "hispanic",
  label = "Hispanic origin",
  choices = hispaniclist
)

selectInput(
  inputId = "education",
  label = "Education level",
  choices = edlist
)

selectInput(
  inputId = "pregnancy",
  label = "Pregnancy status",
  choices = preglist
)
```

## Geographic filters

```{r}
selectInput(
  inputId = "dist",
  label = "Council district",
  choices = distlist
)
```

## Reset

```{r}
actionButton(
  inputId = "reset",
  label = "Reset filters"
)
```

# Plot

```{r}
plotOutput("plot")
```

```{r}
#| context: server

vrd2 <- reactive({
  df <- config_vrd(
    vrd,
    years_input = input$years,
    age_input = unlist(strsplit(input$age, ";")),
    sex_input = unlist(strsplit(input$sex, ";")),
    race_input = input$race,
    hispanic_input = input$hispanic,
    education_input = input$education,
    pregnancy_input = input$pregnancy,
    district_input = input$dist,
    palette = cod_colors
  )
  
  validate(need(df, "There are no records matching the selection criteria"))
  
  df
})

output$plot <- renderPlot({
  cod_bump_chart(vrd2(), input$years, input$ranks)
})

observeEvent(input$reset, {
  updateNumericInput(session, "ranks", value = 10)
  updateNumericInput(session, "years", value = yrsrng)
  updateNumericInput(session, "age", value = agelist[[1]])
  updateNumericInput(session, "sex", value = sexlist[[1]])
  updateNumericInput(session, "race", value = racelist[[1]])
  updateNumericInput(session, "hispanic", value = hispaniclist[[1]])
  updateNumericInput(session, "education", value = edlist[[1]])
  updateNumericInput(session, "pregnancy", value = preglist[[1]])
  updateNumericInput(session, "dist", value = distlist[[1]])
})
```

